import math
import sys
from collections import defaultdict
from collections import deque
import itertools
from itertools import combinations
sys.setrecursionlimit(1000000000)

def solution(N):
    n = N
    a = [False, False] + [True] * (n - 1)
    primes = []

    for i in range(2, n + 1):
        if a[i]:
            primes.append(i)
            for j in range(2 * i, n + 1, i):
                a[j] = False
    cnt = 0
    s, e = 0, 0
    while e <= len(primes):
        if sum(primes[s:e]) == N:
            cnt += 1
            e += 1
        elif sum(primes[s:e]) < N:
            e += 1
        elif sum(primes[s:e]) > N:
            s += 1
    print(cnt)


if __name__ == '__main__':
    N = int(sys.stdin.readline())
    solution(N)
