import math
import sys
from collections import defaultdict
from collections import deque
import itertools
from itertools import combinations

sys.setrecursionlimit(1000000000)


def solution(N, tri_list):
    d = [[0] * i for i in range(1, N + 1)]

    if N == 1:
        print(tri_list[0][0])
        return tri_list[0][0]

    d[0][0] = tri_list[0][0]

    for i in range(1, N):
        for j in range(0, i + 1):
            if j == 0:
                d[i][j] = d[i - 1][j] + tri_list[i][j]
            elif j == i:
                d[i][j] = d[i - 1][j - 1] + tri_list[i][j]
            else:
                d[i][j] = max(d[i - 1][j - 1] + tri_list[i][j], d[i - 1][j] + tri_list[i][j])

    # print(d)
    # print(d[N-1])
    print(max(d[N - 1]))


if __name__ == '__main__':
    N = int(sys.stdin.readline().rstrip())
    tri_list = [list(map(int, sys.stdin.readline().split())) for i in range(N)]

    solution(N, tri_list)
