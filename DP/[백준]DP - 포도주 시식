import math
import sys
from collections import defaultdict
from collections import deque
import itertools
from itertools import combinations
sys.setrecursionlimit(1000000000)

def solution(N):
    wine_val = []
    for i in range(N):
        wine_val.append(int(sys.stdin.readline().rstrip()))

    if N == 1:
        print(wine_val[0])
    elif N == 2:
        print(wine_val[0] + wine_val[1])
    else:
        d = [0] * (N)
        d[0] = wine_val[0]
        d[1] = wine_val[0] + wine_val[1]
        d[2] = max(d[0] + wine_val[2], wine_val[1] + wine_val[2], d[1])

        for i in range(3, N):
            d[i] = max(d[i-2] + wine_val[i], d[i-3] + wine_val[i-1] + wine_val[i], d[i-1])
        #print(d[N-1])
        #print(wine_val)
        print(max(d))





if __name__ == '__main__':
    N = int(sys.stdin.readline().rstrip())
    solution(N)
