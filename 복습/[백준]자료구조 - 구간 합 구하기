#include <iostream>

int N,M,K;

long long tree[1024*1024*2];
int tmpN;

void update(int i, long long a){
    i = tmpN + i - 1;
    tree[i] = a;
    i = i >> 1;
    while(i > 0){
        tree[i] = tree[i*2] + tree[i*2+1];
        i = i >> 1;
    }

}

long long sum(int a, int b){
    a = tmpN + a - 1;
    b = tmpN + b - 1;
    long long sum = 0;
    while(a <= b){
        if ((a&1) == 1)  //right child
            sum += tree[a];
        if ((b&1) == 0) // left child
            sum += tree[b];
        a = (a + 1) >> 1;
        b = (b - 1) >> 1;
    }
    return sum;
}


int main(){

    scanf("%d %d %d", &N, &M, &K);
    for (tmpN=1; tmpN < N; tmpN = tmpN << 1);

    for (int i = 0; i<tmpN *2; i++)tree[i] = 0;
    for (int i = tmpN; i < tmpN + N; i++){
        scanf("%lld", &tree[i]);
    }

    for (int i = tmpN-1; i>= 1; i--){
        tree[i] = tree[i*2] + tree[i*2+1];
    }


    long long a, b, c;
    for (int q = 0; q < M + K; q++){
        scanf("%lld %lld %lld", &a, &b, &c);
        if (a == 1){
            update(b, c);
        }
        else{
            printf("%lld\n", sum(b, c));
        }

    }


    return 0;
}


//세그먼트, 인덱스드 트리로 구하기
