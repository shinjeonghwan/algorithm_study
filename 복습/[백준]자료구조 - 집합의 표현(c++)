#include <iostream>
#include <algorithm>

using namespace std;

int N, M;
int cmd, a, b;
long long arr[1000001];


int find_arr(int x){
    if(arr[x] == x) return x;
    else return arr[x] = find_arr(arr[x]);
}

void union_arr(int a, int b){
    a = find_arr(a);
    b = find_arr(b);

    arr[b] = a;
}


int main(){
    scanf("%d %d", &N, &M);

    for(int i = 1; i <= N; i++){
        arr[i] = i;
    }

    for (int i = 0; i<M; i++){
        scanf("%d %d %d", &cmd, &a, &b);

        if(cmd == 0){
            union_arr(a, b);
        }

        else if(cmd == 1){
            if(find_arr(a) != find_arr(b)){
                printf("NO\n");
            }
            else{
                printf("YES\n");
            }
        }
    }


    return 0;
}



============================================================================================================================================




#include <iostream>
#include <algorithm>

using namespace std;

int N, M;
int cmd, a, b;
long long arr[1000001];


int find_arr(int x){
    if(arr[x] == x) return x;
    else return arr[x] = find_arr(arr[x]);
}

void union_arr(int a, int b){
    a = find_arr(a);
    b = find_arr(b);

    if(a != b){
        arr[a] = b;
    }
}


int main(){
    scanf("%d %d", &N, &M);

    for(int i = 1; i <= N; i++){
        arr[i] = i;
    }

    for (int i = 0; i<M; i++){
        scanf("%d %d %d", &cmd, &a, &b);

        if(cmd == 0){
            union_arr(a, b);
        }

        else if(cmd == 1){
            if(find_arr(a) != find_arr(b)){
                printf("NO\n");
            }
            else{
                printf("YES\n");
            }
        }
    }


    return 0;
}








