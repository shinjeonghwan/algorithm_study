#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

long long N, M;
long long tmp;
vector<long long> lec;
long long mid;
long long l, r;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> N >> M;

	for (int i = 0; i < N; i++) {
		cin >> tmp;
		lec.push_back(tmp);
		r += tmp;
	}

	l = *max_element(lec.begin(), lec.end());

	while (l <= r) {
		mid = l + ((r - l) / 2);
		long long lec_sum = 0;
		long long cnt = 0;

		for (long long i = 0; i < N; i++) {
			if (lec_sum + lec[i] > mid) {
				cnt++;
				lec_sum = 0;
			}
			lec_sum += lec[i];
		}
		if (lec_sum != 0) cnt++;

		if (cnt > M) {
			l = mid + 1;
		}
		else {
			r = mid - 1;
		}
	}
	cout << l;

	return 0;
}
