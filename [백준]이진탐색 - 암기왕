#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

int compare(const void *a, const void *b)
{
    int num1 = *(int *)a;
    int num2 = *(int *)b;


    if (num1>num2)
    {
        return 1;
    }
    else if(num1<num2)
    {
        return -1;
    }
    else
        return 0;

}

int main()
{
    int T = 0;
    int N = 0;
    int M = 0;

    int mid = 0;

    scanf("%d", &T);
while(T != 0)
{
    int *N_numbers;
    int *M_numbers;

    scanf("%d",&N);

    N_numbers = malloc(sizeof(int)*N);
    for(int i = 0; i < N; i++)
    {
        scanf("%d", &N_numbers[i]);
    }


    scanf("%d",&M);

    M_numbers = malloc(sizeof(int)*M);
    for(int i = 0; i < M; i++)
    {
        scanf("%d", &M_numbers[i]);
    }


    qsort(N_numbers, N , sizeof(N_numbers[0]), compare);


    for(int i = 0; i<M; i++)
    {
        int left = 0;
        int right = N-1;
        int flag = 0;

        while(left <= right)
        {
            mid = left + (right-left)/2;

            if(N_numbers[mid] > M_numbers[i])
            {
                right = mid - 1;
            }
            else if(N_numbers[mid] < M_numbers[i])
            {
                left = mid + 1;
            }
            else if(N_numbers[mid] == M_numbers[i])
            {
                printf("1\n");
                flag = 1;
                break;
            }
        }

        if(flag == 1)
        {
            flag == 0;
            continue;
        }
        printf("0\n");
    }

    free(N_numbers);
    free(M_numbers);
    T--;
}


    return 0;
}
