#include <iostream>
#include <vector>
#include <queue>

using namespace std;

// 문제집 아이디어
// 위상정렬로 
// 

priority_queue<int,vector<int>, greater<int>> pq;
vector<vector<int>> graph;
vector<int>inDegree;


int N, M;
int A, B;

vector<int> answer;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> N >> M;

    graph.assign(N + 1, vector<int>(0, 0));
    inDegree.assign(N + 1, 0);

    for (int i = 0; i != M; i++) {
        cin >> A >> B;
        graph[A].push_back(B);
        inDegree[B]++;
    }

    for (int i = 1; i <= N; i++) {
        if (inDegree[i] == 0) pq.push(i);
    }

    while (!pq.empty()) {
        int cur = pq.top();
        pq.pop();
        answer.push_back(cur);

        for (int i = 0; i < graph[cur].size(); i++) {
            int next = graph[cur][i];
            if (--inDegree[next] == 0) pq.push(next);
        }


    }

    for (int i = 0; i != N; i++) {
        cout << answer[i] << ' ';
    }


    return 0;
}
