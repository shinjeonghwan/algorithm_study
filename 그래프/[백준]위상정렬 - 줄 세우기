#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;

int N, M;
vector<int> inDegree;
vector<vector<int>> graph;
queue<int> Q;

int s, e;


int main(){
    scanf("%d %d", &N, &M);

    graph.assign(N + 1, vector<int>(0, 0));
    inDegree.assign(N + 1, 0);


    for(int i = 0; i < M; i++){
        scanf("%d %d", &s, &e);
        graph[s].push_back(e);
        inDegree[e]++;
    }

    for(int i = 1; i <= N; i++){
        if(inDegree[i] == 0) Q.push(i);
    }

    for(int i = 0; i < N; i++){
        if(Q.empty()){
            printf("cycle!!\n");
            break;
        }

        int cur = Q.front();
        Q.pop();
        printf("%d ", cur);

        for(int k = 0; k < graph[cur].size(); k++){
            int next = graph[cur][k];
            if(--inDegree[next] == 0) Q.push(next);
        }
    }

    return 0;
}
