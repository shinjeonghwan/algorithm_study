import sys
sys.setrecursionlimit(10000)
def solution(N, M):
    def dfs(graph, v, visited):
        visited[v] = True
        for i in graph[v]:
            if not visited[i]:
                dfs(graph, i, visited)

    cnt = 0
    graph = [[] for _ in range(N+1)]
    graph[0] = [0]
    for _ in range(M):
        u, v = map(int, sys.stdin.readline().split())
        graph[u].append(v)
        graph[v].append(u)

    visited = [False]*(N+1)

    for idx in range(1, N+1):
        if visited[idx] == False:
            dfs(graph, idx, visited)
            cnt += 1

    print(cnt)

if __name__ == '__main__':
    N,M = map(int, sys.stdin.readline().split())
    solution(N, M)
