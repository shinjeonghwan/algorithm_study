#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;

struct e_t {
	int node;
	int cnt;
	e_t(int Node, int Cnt) : node(Node), cnt(Cnt) {}
};


vector<int> family_tree[101];
queue<e_t> Q;
bool tree_visited[101];
int n, m;
int s, e;
int x, y;
int ans = -1;


int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	cin >> s >> e;
	cin >> m;

	for (int i = 0; i < m; i++) {
		cin >> x >> y;
		family_tree[x].push_back(y);
		family_tree[y].push_back(x);
	}

	Q.push(e_t(s,0));
	tree_visited[s] = true;

	while (!Q.empty()) {
		e_t cur = Q.front();
		Q.pop();

		for (int next_node : family_tree[cur.node]) {
			if (next_node == e) {
				ans = cur.cnt + 1;
				break;
			}
			if (tree_visited[next_node] == false) {
				tree_visited[next_node] = true;
				Q.push(e_t(next_node, cur.cnt + 1));
			}
		}
		if (ans != -1) {
			break;
		}
	}

	printf("%d\n", ans);


	return 0;
}
