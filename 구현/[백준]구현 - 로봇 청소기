import sys
from collections import Counter
from itertools import combinations
sys.setrecursionlimit(1000000000)

def solution(N, M, x,y,d, graph):
    dx = [-1, 0, 1, 0]
    dy = [0, 1, 0, -1]

    cnt = 1
    graph[x][y] = 3

    while True:
        chk = False
        for i in range(4):
            d = (d-1) % 4
            nx = x + dx[d]
            ny = y + dy[d]
            if 0 <= nx < N and 0 <= ny < M:
                if graph[nx][ny] == 0:
                    cnt +=1
                    graph[nx][ny] = 3
                    x, y = nx, ny
                    chk = True
                    break
        if not chk:
            nx = x - dx[d]
            ny = y - dy[d]
            if 0 <= nx < N and 0 <= ny < M:
                if graph[nx][ny] == 3:
                    x, y = nx, ny
                elif graph[nx][ny] == 1:
                    print(cnt)
                    break
            else:
                print(cnt)
                break

if __name__ == '__main__':
    N, M = map(int, input().split())
    x, y, d = map(int, input().split())
    graph = [list(map(int, input().split())) for _ in range(N)]

    solution(N, M, x,y,d, graph)
