#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <deque>

using namespace std;   // 0~9를 의미하는 값과, LED none인 케이스 총 11개의 케이스가 필요
int arr_pin_map[11][8] = { { 0, 1, 1, 1, 1, 1, 0, 1 } , {0, 0, 1, 1, 0, 0, 0, 0 }, { 0, 1, 1, 0, 1, 1, 1, 0 }, { 0, 1, 1, 1, 1, 0, 1, 0}, { 0, 0, 1, 1, 0, 0, 1, 1},
                             { 0, 1, 0, 1, 1, 0, 1, 1}, { 0, 1, 0, 1, 1, 1, 1, 1 }, { 0, 1, 1, 1, 0, 0, 0, 1 }, { 0, 1, 1, 1, 1, 1, 1, 1}, { 0, 1, 1, 1, 1, 0, 1, 1 }, {0,0,0,0,0,0,0,0} };

int T, A, B;



int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> T;

    //테스트케이스 수행 횟수
    for (int i = 0; i < T; i++) {
        //여기서부터 사용하는 모든 값들 매번 초기화
        cin >> A >> B;
        int pin_arr_A[5];
        int pin_arr_B[5];
        int T_answer = 0;
        vector<vector<int>> cal;
        
        string q = to_string(A);
        string w = to_string(B);

        pin_arr_A[0] = A / 10000;
        A = A % 10000;

        pin_arr_A[1] = A / 1000;
        A = A % 1000;

        pin_arr_A[2] = A / 100;
        A = A % 100;

        pin_arr_A[3] = A / 10;
        A = A % 10;

        pin_arr_A[4] = A;

        for (int k = 0; k < 5; k++) {
            vector<int> tmp;
            if (k < 5 - q.size() && q.size() != 5) {
                for (int t = 0; t < 8; t++) {
                    tmp.push_back(arr_pin_map[10][t]);
                }
                cal.push_back(tmp);
            }
            else {
                for (int t = 0; t < 8; t++) {
                    tmp.push_back(arr_pin_map[pin_arr_A[k]][t]);
                }
                cal.push_back(tmp);
            }
        }

        pin_arr_B[0] = B / 10000;
        B = B % 10000;

        pin_arr_B[1] = B / 1000;
        B = B % 1000;

        pin_arr_B[2] = B / 100;
        B = B % 100;

        pin_arr_B[3] = B / 10;
        B = B % 10;

        pin_arr_B[4] = B;

        for (int k = 0; k < 5; k++) {
            int tmp_cnt = 0;
            if (k < 5 - w.size() && w.size() != 5) {
                for (int t = 0; t < 8; t++) {
                    if (cal[k][t] != arr_pin_map[10][t]) {
                        T_answer += 1;
                        tmp_cnt++;
                    }
                }
            }
            else {
                for (int t = 0; t < 8; t++) {
                    if (cal[k][t] != arr_pin_map[pin_arr_B[k]][t]) {
                        tmp_cnt++;
                        T_answer += 1;
                    }
                }
            }
        }
        cout << T_answer << '\n';

    }





    return 0;
}
