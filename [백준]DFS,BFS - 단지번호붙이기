import sys
sys.setrecursionlimit(10000)
def solution(N):
    def dfs(x, y, num):
        if x <= -1 or x >= N or y <= -1 or y >= N:
            return False, num
        if graph[x][y] == 1:
            graph[x][y] = 0
            num += 1
            _, num = dfs(x - 1, y, num)
            _, num = dfs(x, y - 1, num)
            _, num = dfs(x + 1, y, num)
            _, num = dfs(x, y + 1, num)
            return True, num
        return False, num

    cnt = 0
    graph = []
    for i in range(N):
        graph.append(list(map(int, input())))

    apart_num = []
    for i in range(N):
        for j in range(N):
            num = 0
            a, b = dfs(i,j,num)
            if a == True:
                cnt += 1
                apart_num.append(b)
    print(cnt)
    apart_num.sort()
    for i in apart_num:
        print(i)

if __name__ == '__main__':
    N = int(input())
    solution(N)
