#순열로 푼 정답.

import sys
from collections import deque
from itertools import permutations
import copy
sys.setrecursionlimit(1000000000)

def solution(N, M):
    num_list = [i for i in range(1, N+1)]
    res_list = permutations(num_list, M)
    for i in res_list:
        for j in i:
            print(j, end=" ")
        print()



if __name__ == '__main__':
    N, M = map(int, sys.stdin.readline().split())

    solution(N, M)



=================================================================================================================

#백트레킹 알고리즘 써서 푼 정답.


import sys
from collections import deque
from itertools import permutations
import copy
sys.setrecursionlimit(1000000000)

def solution(N, M):

    def backtracking(S):
        if len(S) == M:
            print(' '.join(map(str, S)))
            return

        for i in range(1, N+1):
            if i in S:
                continue
            S.append(i)
            backtracking(S)
            S.pop()

    S = []
    backtracking(S)


if __name__ == '__main__':
    N, M = map(int, sys.stdin.readline().split())

    solution(N, M)










